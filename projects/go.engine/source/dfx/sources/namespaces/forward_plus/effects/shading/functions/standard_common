/*
    Helper function for performing common shading operations.

    \param input The input fragment.
    \param

    \return The shaded fragment.
 */
::forward_plus::shading::output $(::vertices::shading input, ::materials::standard material)
{
    // Normalize shading vectors
    ::functions::lighting::normalize_vertex_shading_vectors(input);

    // Generate tangent basis
    const float3 faceNormalWS = input.normalWS;
    const float3x3 tangentBasis = ::functions::transforms::tangent_basis(input.normalWS, input.tangentWS);

    // Apply normal mapping
    ::functions::transforms::apply_normal_mapping(input, material.normalTS, tangentBasis);

    // Get the view-vector
    const float3 renderPointPosWS = ::constants::frame::g_mainRenderPointPositionWS.xyz;
    const float3 viewDirWS = normalize(renderPointPosWS - input.positionWS);

    // Run the actual shader
    return ::forward_plus::shading::standard_lighting(input, viewDirWS, faceNormalWS, material);
}
