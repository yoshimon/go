TSynHLSLSyn   {first Identifier is considered to be the Class Name }
tk              {second Identifier is considered to be the Identifier Prefix }
IdentStart '_', 'a'..'z', 'A'..'Z':: '_', '0'..'9', 'a'..'z', 'A'..'Z'::

TOKENTYPES
Identifier
Comment Style=[fsItalic]|Foreground=clWebDarkOliveGreen
Space
String Foreground=clWebFirebrick
Key Style=[fsBold]
Funcs Style=[fsBold]|Foreground=clWebSteelBlue
Objs Style=[fsBold]|Foreground=clWebMediumBlue
MiscKey Style=[fsBold]|Foreground=clWebRoyalBlue
VarUsage Style=[fsBold]|Foreground=clWebDarkSlategray
ShaderAttr Style=[fsItalic]|Foreground=clWebMidnightBlue
ControlFlow Style=[fsBold]
StorageClass Style=[fsBold]|Foreground=clWebDarkSlateBlue
TypeMod Style=[fsBold]|Foreground=clWebSlateBlue
Semantic Style=[fsBold]|Foreground=clWebGray
BuiltInTypes Style=[fsBold]|Foreground=clWebMediumBlue
|><|

KEYS
struct
cbuffer
tbuffer
default
true
false
inline
line
lineadj
namespace
point
|><|

KEYS Funcs
abort
abs
acos
all
AllMemoryBarrier
AllMemoryBarrierWithGroupSync
any
asdouble
asfloat
asin
asint
asuint
atan
atan2
ceil
CheckAccessFullyMapped
clamp
clip
cos
cosh
countbits
cross
D3DCOLORtoUBYTE4
ddx
ddx_coarse
ddx_fine
ddy
ddy_coarse
ddy_fine
degrees
determinant
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
distance
dot
dst
errorf
EvaluateAttributeAtCentroid
EvaluateAttributeAtSample
EvaluateAttributeSnapped
exp
exp2
f16to32
f32to16
faceforward
firstbithigh
firstbitlow
floor
fma
fmod
frac
frexp
fwidth
GetRenderTargetSampleCount
GetRenderTargetSamplePosition
GroupMemoryBarrier
GroupMemoryBarrierWithGroupSync
InterlockedAdd
InterlockedAnd
InterlockedCompareExchange
InterlockedCompareStore
InterlockedExchange
InterlockedMax
InterlockedMin
InterlockedOr
InterlockedXor
isfinite
isinf
isnan
ldexp
length
lerp
lit
log
log10
log2
mad
max
min
modf
msad4
mul
noise
normalize
pow
printf
Process2DQuadTessFactorsAvg
Process2DQuadTessFactorsMax
Process2DQuadTessFactorsMin
ProcessIsolineTessFactors
ProcessQuadTessFactorsAvg
ProcessQuadTessFactorsMax
ProcessQuadTessFactorsMin
ProcessTriTessFactorsAvg
ProcessTriTessFactorsMax
ProcessTriTessFactorsMin
radians
rcp
reflect
refract
reversebits
round
rsqrt
saturate
sign
sin
sincos
sinh
smoothstep
sqrt
step
tan
tanh
tex1D
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2D
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3D
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
transpose
trunc
|><|

KEYS Objs
AppendStructuredBuffer
Buffer
ByteAddressBuffer
ConsumeStructuredBUffer
InputPatch
LineStream
OutputPatch
PointStream
RWBuffer
RWByteAddressBuffer
RWStructuredBuffer
RWTexture1D
RWTexture1DArray
RWTexture2D
RWTexture2DArray
RWTexture3D
StructuredBuffer
Texture1D
Texture1DArray
Texture2D
Texture2DArray
Texture2DMS
Texture2DMSArray
Texture3D
TextureCube
TextureCubeArray
TriangleStream
sampler
SamplerState
SamplerComparisonState
|><|

KEYS MiscKey
register
packoffset
|><|

KEYS VarUsage
in
out
inout
|><|

KEYS ShaderAttr
branch
call
flatten
ifAll
ifAny
isolate
loop
maxexports
maxInstructionCount
maxtempreg
noExpressionOptimizations
predicate
predicateBlock
reduceTempRegUsage
removeUnusedInputs
sampreg
unroll
unused
numthreads
|><|

KEYS ControlFlow
if
else
for
do
while
discard
switch
case
break
continue
return
|><|

KEYS StorageClass
extern
nointerpolation
precise
shared
groupshared
static
uniform
volatile
centroid
sample
|><|

KEYS TypeMod
const
row_major
column_major
|><|

KEYS Semantic
BINORMAL
BINORMAL0
BINORMAL1
BINORMAL2
BINORMAL3
BINORMAL4
BINORMAL5
BINORMAL6
BINORMAL7
BINORMAL8
BINORMAL9
BLENDINDICES
BLENDINDICES0
BLENDINDICES1
BLENDINDICES2
BLENDINDICES3
BLENDINDICES4
BLENDINDICES5
BLENDINDICES6
BLENDINDICES7
BLENDINDICES8
BLENDINDICES9
BLENDWEIGHT
BLENDWEIGHT0
BLENDWEIGHT1
BLENDWEIGHT2
BLENDWEIGHT3
BLENDWEIGHT4
BLENDWEIGHT5
BLENDWEIGHT6
BLENDWEIGHT7
BLENDWEIGHT8
BLENDWEIGHT9
COLOR
COLOR0
COLOR1
COLOR2
COLOR3
COLOR4
COLOR5
COLOR6
COLOR7
COLOR8
COLOR9
NORMAL
NORMAL0
NORMAL1
NORMAL2
NORMAL3
NORMAL4
NORMAL5
NORMAL6
NORMAL7
NORMAL8
NORMAL9
POSITION
POSITION0
POSITION1
POSITION2
POSITION3
POSITION4
POSITION5
POSITION6
POSITION7
POSITION8
POSITION9
POSITIONT
PSIZE
PSIZE0
PSIZE1
PSIZE2
PSIZE3
PSIZE4
PSIZE5
PSIZE6
PSIZE7
PSIZE8
PSIZE9
TANGENT
TANGENT0
TANGENT1
TANGENT2
TANGENT3
TANGENT4
TANGENT5
TANGENT6
TANGENT7
TANGENT8
TANGENT9
TEXCOORD
TEXCOORD0
TEXCOORD1
TEXCOORD2
TEXCOORD3
TEXCOORD4
TEXCOORD5
TEXCOORD6
TEXCOORD7
TEXCOORD8
TEXCOORD9
FOG
TESSFACTOR
TESSFACTOR0
TESSFACTOR1
TESSFACTOR2
TESSFACTOR3
TESSFACTOR4
TESSFACTOR5
TESSFACTOR6
TESSFACTOR7
TESSFACTOR8
TESSFACTOR9
DEPTH
DEPTH0
DEPTH1
DEPTH2
DEPTH3
DEPTH4
DEPTH5
DEPTH6
DEPTH7
DEPTH8
DEPTH9
SV_ClipDistance
SV_ClipDistance0
SV_ClipDistance1
SV_ClipDistance2
SV_ClipDistance3
SV_ClipDistance4
SV_ClipDistance5
SV_ClipDistance6
SV_ClipDistance7
SV_ClipDistance8
SV_ClipDistance9
SV_CullDistance
SV_CullDistance0
SV_CullDistance1
SV_CullDistance2
SV_CullDistance3
SV_CullDistance4
SV_CullDistance5
SV_CullDistance6
SV_CullDistance7
SV_CullDistance8
SV_CullDistance9
SV_Coverage
SV_Depth
SV_DispatchThreadID
SV_DomainLocation
SV_GroupID
SV_GroupIndex
SV_GroupThreadID
SV_GSInstanceID
SV_InsideTessFactor
SV_IsFrontFace
SV_OutputControlPointID
SV_Position
SV_RenderTargetArrayIndex
SV_SampleIndex
SV_Target
SV_Target0
SV_Target1
SV_Target2
SV_Target3
SV_Target4
SV_Target5
SV_Target6
SV_Target7
SV_TessFactor
SV_ViewportArrayIndex
SV_InstanceID
SV_PrimitiveID
SV_VertexID
|><|

KEYS BuiltInTypes
void
unsigned
bool
bool1
bool2
bool3
bool4
bool1x1
bool2x1
bool3x1
bool4x1
bool1x2
bool2x2
bool3x2
bool4x2
bool1x3
bool2x3
bool3x3
bool4x3
bool1x4
bool2x4
bool3x4
bool4x4
int
int1
int2
int3
int4
int1x1
int2x1
int3x1
int4x1
int1x2
int2x2
int3x2
int4x2
int1x3
int2x3
int3x3
int4x3
int1x4
int2x4
int3x4
int4x4
uint
uint1
uint2
uint3
uint4
uint1x1
uint2x1
uint3x1
uint4x1
uint1x2
uint2x2
uint3x2
uint4x2
uint1x3
uint2x3
uint3x3
uint4x3
uint1x4
uint2x4
uint3x4
uint4x4
dword
dword1
dword2
dword3
dword4
dword1x1
dword2x1
dword3x1
dword4x1
dword1x2
dword2x2
dword3x2
dword4x2
dword1x3
dword2x3
dword3x3
dword4x3
dword1x4
dword2x4
dword3x4
dword4x4
half
half1
half2
half3
half4
half1x1
half2x1
half3x1
half4x1
half1x2
half2x2
half3x2
half4x2
half1x3
half2x3
half3x3
half4x3
half1x4
half2x4
half3x4
half4x4
float
float1
float2
float3
float4
float1x1
float2x1
float3x1
float4x1
float1x2
float2x2
float3x2
float4x2
float1x3
float2x3
float3x3
float4x3
float1x4
float2x4
float3x4
float4x4
double
double1
double2
double3
double4
double1x1
double2x1
double3x1
double4x1
double1x2
double2x2
double3x2
double4x2
double1x3
double2x3
double3x3
double4x3
double1x4
double2x4
double3x4
double4x4
min16float
min16float1
min16float2
min16float3
min16float4
min16float1x1
min16float2x1
min16float3x1
min16float4x1
min16float1x2
min16float2x2
min16float3x2
min16float4x2
min16float1x3
min16float2x3
min16float3x3
min16float4x3
min16float1x4
min16float2x4
min16float3x4
min16float4x4
min10float
min10float1
min10float2
min10float3
min10float4
min10float1x1
min10float2x1
min10float3x1
min10float4x1
min10float1x2
min10float2x2
min10float3x2
min10float4x2
min10float1x3
min10float2x3
min10float3x3
min10float4x3
min10float1x4
min10float2x4
min10float3x4
min10float4x4
min16int
min16int1
min16int2
min16int3
min16int4
min16int1x1
min16int2x1
min16int3x1
min16int4x1
min16int1x2
min16int2x2
min16int3x2
min16int4x2
min16int1x3
min16int2x3
min16int3x3
min16int4x3
min16int1x4
min16int2x4
min16int3x4
min16int4x4
min12int
min12int1
min12int2
min12int3
min12int4
min12int1x1
min12int2x1
min12int3x1
min12int4x1
min12int1x2
min12int2x2
min12int3x2
min12int4x2
min12int1x3
min12int2x3
min12int3x3
min12int4x3
min12int1x4
min12int2x4
min12int3x4
min12int4x4
min16uint
min16uint1
min16uint2
min16uint3
min16uint4
min16uint1x1
min16uint2x1
min16uint3x1
min16uint4x1
min16uint1x2
min16uint2x2
min16uint3x2
min16uint4x2
min16uint1x3
min16uint2x3
min16uint3x3
min16uint4x3
min16uint1x4
min16uint2x4
min16uint3x4
min16uint4x4
snorm
unorm
vector
matrix
|><|

CHARS

'A'..'Z', 'a'..'z', '_':: Ident
BeginProc
  fTokenID := IdentKind(fLine + Run);
  inc(Run, fStringLen);
  while IsIdentChar(fLine[Run]) do
    Inc(Run);
EndProc

|><|

ENCLOSEDBY

Comment,CStyleComment,/*,*/,MultiLine
String,String,","

|><|

SAMPLESOURCE
{ Sample source for the demo highlighter }

This highlighter will recognize the words Hello and
World as keywords. It will also highlight "Strings".

And a special keyword type: SynEdit

/* This style of comments is also highlighted */
|><|

